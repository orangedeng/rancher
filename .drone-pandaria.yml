---
kind: pipeline
name: default-linux-amd64
platform:
  os: linux
  arch: amd64
steps:
- name: pre-check
  pull: default
  image: rancher/dapper:v0.5.2
  commands:
  - dapper -f Dockerfile-pandaria.dapper pre-check
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    event:
    - push
    - pull_request
    - tag

- name: build
  pull: default
  image: rancher/dapper:v0.5.2
  environment:
    OAUTH_TOKEN:
      from_secret: github_token
    GOPROXY:
      from_secret: go_proxy
  commands:
  - apk add git make curl go=1.13.13-r0 bzr
  - make -f Makefile.pandaria
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  - name: vendor-cache
    path: /root/go/pkg
  privileged: true
  when:
    event:
    - push
    - pull_request
    - tag

- name: stage-binaries
  image: rancher/dapper:v0.5.2
  commands:
  - "cp -r ./bin/* ./package/"
  when:
    event:
    - push
    - tag

- name: docker-publish-head
  pull: default
  image: plugins/docker:18.09
  settings:
    build_args:
    - ARCH=amd64
    - VERSION=v2.4-${DRONE_BUILD_NUMBER}-head
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.pandaria
    tag: v2.4-head
    password:
      from_secret: docker_password
    repo: cnrancher/rancher
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/release/v2.4-ent"
    event:
    - push

- name: docker-publish-head-agent
  pull: default
  image: plugins/docker:18.09
  settings:
    build_args:
    - ARCH=amd64
    - VERSION=v2.4-${DRONE_BUILD_NUMBER}-head
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile-pandaria.agent
    tag: v2.4-head
    password:
      from_secret: docker_password
    repo: cnrancher/rancher-agent
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/release/v2.4-ent"
    event:
    - push

- name: docker-publish
  pull: default
  image: plugins/docker:18.09
  settings:
    build_args:
    - ARCH=amd64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.pandaria
    password:
      from_secret: docker_password
    repo: cnrancher/rancher
    tag: "${DRONE_TAG}-linux-amd64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: docker-publish-agent
  pull: default
  image: plugins/docker:18.09
  settings:
    build_args:
    - ARCH=amd64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile-pandaria.agent
    password:
      from_secret: docker_password
    repo: cnrancher/rancher-agent
    tag: "${DRONE_TAG}-linux-amd64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: publish-airgap
  pull: default
  image: rancher/dapper:v0.5.2
  environment:
    OAUTH_TOKEN:
      from_secret: github_token
  commands:
  - apk add git make curl go=1.13.13-r0 bzr
  - make -f Makefile.pandaria publish-airgap
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  - name: vendor-cache
    path: /root/go/pkg
  when:
    event:
    - tag

- name: github_binary_prerelease
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    files:
    - "bin/rancher-*"
    prerelease: true
  when:
    event:
    - tag
    ref:
      include:
      - "refs/tags/*rc*"
      - "refs/tags/*alpha*"

- name: github_binary_release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    files:
    - "bin/rancher-*"
  when:
    event:
    - tag
    ref:
      include:
      - "refs/tags/v2*"
      exclude:
      - "refs/tags/*rc*"
      - "refs/tags/*alpha*"

- name: chart-publish
  image: jacie/drone-aliyun-oss
  pull: always
  environment:
    ALIYUN_ACCESS_KEY_ID:
      from_secret: aliyun_access_id
    ALIYUN_SECRET_ACCESS_KEY:
      from_secret: aliyun_access_secret
    PLUGIN_SOURCE: bin/chart
    ALIYUN_BUCKET: oss://pandaria-releases
    ALIYUN_ENDPOINT: http://oss-cn-beijing.aliyuncs.com
    PLUGIN_TARGET: server-charts
    PLUGIN_RECURSIVE: -r
    PLUGIN_ACCESS: public-read
  commands:
  - "aliyun-oss"
  when:
    event:
    - tag

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: vendor-cache
  host:
    path: /opt/vendor-cache

node:
  instance: agent-amd64

trigger:
  event:
    exclude:
    - promote

---
kind: pipeline
name: default-linux-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: build
  image: rancher/dapper:v0.5.2
  environment:
    OAUTH_TOKEN:
      from_secret: github_token
    GOPROXY:
      from_secret: go_proxy
  commands:
  - apk add git make curl go=1.13.13-r0 bzr
  - make -f Makefile.pandaria
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  - name: vendor-cache
    path: /root/go/pkg
  when:
    event:
    - tag

- name: stage-binaries
  image: rancher/dapper:v0.5.2
  commands:
  - "cp -r ./bin/* ./package/"
  when:
    event:
    - tag

- name: docker-publish
  image: plugins/docker:18.09
  settings:
    build_args:
    - ARCH=arm64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.pandaria
    password:
      from_secret: docker_password
    repo: cnrancher/rancher
    tag: "${DRONE_TAG}-linux-arm64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: docker-publish-agent
  image: plugins/docker:18.09
  settings:
    build_args:
    - ARCH=arm64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile-pandaria.agent
    password:
      from_secret: docker_password
    repo: cnrancher/rancher-agent
    tag: "${DRONE_TAG}-linux-arm64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: vendor-cache
  host:
    path: /opt/vendor-cache

trigger:
  event:
    include:
    - tag

node:
  instance: agent-arm64

---
kind: pipeline
name: manifest

platform:
  os: linux
  arch: amd64

steps:
- name: push-agent-manifest
  image: plugins/manifest
  settings:
    ignore_missing: true
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: manifest-agent.tmpl.pandaria
  when:
    event:
    - tag

- name: push-manifest
  image: plugins/manifest
  settings:
    ignore_missing: true
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: manifest.tmpl.pandaria
  when:
    event:
    - tag

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
    include:
    - tag

node:
  instance: agent-amd64

depends_on:
- default-linux-amd64
- default-linux-arm64

...

